{"version":3,"sources":["pages/HomePage.tsx","pages/About.tsx","components/AddCommentForm.tsx","components/ArticlesList.tsx","components/CommentsList.tsx","components/UpvoteSection.tsx","data/ArticleContent.tsx","pages/PageNotFound.tsx","pages/Article.tsx","pages/ArticleListPage.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","About","AddCommentForm","articleName","setArticleInfo","useState","username","setUsername","commentText","setCommentText","addComment","a","fetch","method","body","JSON","stringify","text","headers","result","json","id","type","value","onChange","event","target","cols","rows","onClick","ArticleList","articles","map","article","key","className","to","name","title","content","substring","CommentsList","comments","comment","UpvoteSection","upvotes","upvoteArticle","PageNotFound","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","para","ArticleListPage","NavBar","App","path","component","exact","Article","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a4f15bb.chunk.js","sourcesContent":["const HomePage = (): JSX.Element => (\n  <>\n    <h1>Hello to the Blog!</h1>\n    <p>\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Numquam\n      assumenda sequi eligendi deleniti dolores, aliquam molestiae ipsa esse,\n      asperiores eius deserunt dicta maiores nihil minima provident sint\n      accusantium aliquid dolore.\n    </p>\n  </>\n);\n\nexport default HomePage;\n","const About = (): JSX.Element => (\n  <>\n    <h1>About Us</h1>\n    <p>\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Numquam\n      assumenda sequi eligendi deleniti dolores, aliquam molestiae ipsa esse,\n      asperiores eius deserunt dicta maiores nihil minima provident sint\n      accusantium aliquid dolore.\n    </p>\n  </>\n);\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { ArticleInfo } from \"../data/ArticleContent\";\n\ninterface Props {\n  articleName: string;\n  setArticleInfo: React.Dispatch<React.SetStateAction<ArticleInfo>>;\n}\n\nconst AddCommentForm = ({ articleName, setArticleInfo }: Props) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [commentText, setCommentText] = useState<string>(\"\");\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: \"post\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n    setUsername(\"\");\n    setCommentText(\"\");\n  };\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3>Add a comment</h3>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n      </label>\n      <label>\n        Comment:\n        <textarea\n          cols={50}\n          rows={4}\n          value={commentText}\n          onChange={(event) => setCommentText(event.target.value)}\n        />\n      </label>\n      <button onClick={addComment}>Add Comment</button>\n    </div>\n  );\n};\n\nexport default AddCommentForm;\n","import { Link } from \"react-router-dom\";\nimport { Article } from \"../data/ArticleContent\";\n\nconst ArticleList = ({ articles }: { articles: Article[] }) => (\n  <>\n    {articles.map((article, key) => (\n      <Link\n        className=\"article-list-item\"\n        key={key}\n        to={`/article/${article.name}`}\n      >\n        <h3>{article.title}</h3>\n        <p>{article.content[0].substring(0, 150)}...</p>\n      </Link>\n    ))}\n  </>\n);\n\nexport default ArticleList;\n","export interface Comment {\n  username: string;\n  text: string;\n}\n\nconst CommentsList = ({ comments }: { comments: Comment[] }) => (\n  <>\n    {comments.map((comment, key) => (\n      <div className=\"comment\" key={key}>\n        <h4>{comment.username}</h4>\n        <p>{comment.text}</p>\n      </div>\n    ))}\n  </>\n);\n\nexport default CommentsList;\n","import { ReactElement } from \"react\";\nimport { ArticleInfo } from \"../data/ArticleContent\";\n\ninterface Props {\n  articleName: string;\n  upvotes: number;\n  setArticleInfo: React.Dispatch<React.SetStateAction<ArticleInfo>>;\n}\n\nexport const UpvoteSection = ({\n  articleName,\n  upvotes,\n  setArticleInfo,\n}: Props): ReactElement => {\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: \"post\",\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n  };\n\n  return (\n    <div id=\"upvotes-section\">\n      <button onClick={upvoteArticle}>Add Upvote</button>\n      <p>This post has been upvoted {upvotes} times</p>\n    </div>\n  );\n};\n","import { Comment } from \"../components/CommentsList\";\n\nexport interface Article {\n  name: string;\n  title: string;\n  content: string[];\n}\n\nexport interface ArticleInfo {\n  upvotes: number;\n  comments?: Comment[];\n}\n\nconst articles: Article[] = [\n  {\n    name: \"learn-react\",\n    title: \"The Fastest Way to Learn React\",\n    content: [\n      `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n  {\n    name: \"learn-node\",\n    title: \"How to Build a Node Server in 10 Minutes\",\n    content: [\n      `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n  {\n    name: \"my-thoughts-on-resumes\",\n    title: \"My Thoughts on Resumes\",\n    content: [\n      `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n];\n\nexport default articles;\n","const PageNotFound = () => <h1>Error 404! Page not found!</h1>;\n\nexport default PageNotFound;\n","import { useEffect, useState } from \"react\";\nimport { match } from \"react-router-dom\";\nimport AddCommentForm from \"../components/AddCommentForm\";\nimport ArticleList from \"../components/ArticlesList\";\nimport CommentsList from \"../components/CommentsList\";\nimport { UpvoteSection } from \"../components/UpvoteSection\";\nimport articles, { Article, ArticleInfo } from \"../data/ArticleContent\";\nimport PageNotFound from \"./PageNotFound\";\n\ninterface Params {\n  name: string;\n}\n\nconst ArticlePage = ({ match }: { match: match<Params> }): JSX.Element => {\n  const name = match.params.name;\n\n  const article: Article | undefined = articles.find(\n    (article) => article.name === name\n  );\n\n  const [articleInfo, setArticleInfo] = useState<ArticleInfo>({\n    upvotes: 0,\n    comments: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n\n      const body = await result.json();\n\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!article) {\n    return <PageNotFound />;\n  }\n\n  const otherArticles = articles.filter((article) => article.name !== name);\n\n  return (\n    <>\n      <h1>{article?.title}</h1>\n      <UpvoteSection\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article?.content.map((para, key) => (\n        <p key={key}>{para}</p>\n      ))}\n\n      {articleInfo.comments && <CommentsList comments={articleInfo.comments} />}\n\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n\n      <h2>Other Articles:</h2>\n      <ArticleList articles={otherArticles} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n","import ArticleList from \"../components/ArticlesList\";\nimport articles from \"../data/ArticleContent\";\n\nconst ArticleListPage = (): JSX.Element => (\n  <>\n    <h1>Articles List:</h1>\n    <ArticleList articles={articles} />\n  </>\n);\n\nexport default ArticleListPage;\n","import { Link } from \"react-router-dom\";\n\nconst NavBar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/articles-list\">Articles</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport About from \"./pages/About\";\nimport Article from \"./pages/Article\";\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport NavBar from \"./components/NavBar\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nfunction App(): JSX.Element {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/article/:name\" component={Article} />\n            <Route path=\"/articles-list\" component={ArticleListPage} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"whatwg-fetch\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}